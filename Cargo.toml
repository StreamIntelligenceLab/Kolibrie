[package]
name = "kolibrie"
version = "0.1.0"
authors = ["Volodymyr Kadzhaia <vkadzhaia@gmail.com>", "Pieter Bonte <pieter.bonte@kuleuven.be>"]
description = """
A SPARQL database and RDF toolkit
"""
edition = "2021"
license = "MIT"
categories = ["database", "database-implementations", "data-structures"]
keywords = ["database", "rdf", "graph-database", "sparql", "sql"]
readme = "README.md"
exclude = ["target/"]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
quick-xml = "0.31.0"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
regex = "1"
rand = "0.8.5"
rayon = "1.10.0"
nom = "7.1.3"
url = "2.5.2"
percent-encoding = "2.3.1"
httparse = "1.9.4"
crossbeam = "0.8.4"

[target.'cfg(unix)'.dependencies]
libc = "0.2.161"

[target.'cfg(windows)'.dependencies]
winapi = { version = "0.3.9", features = ["sysinfoapi"] }

[dev-dependencies]
criterion = "0.5.1"

[[bench]]
name = "my_benchmark"
harness = false

[profile.bench]
debug = true

[profile.dev]
opt-level = 1
debug = true
debug-assertions = true
overflow-checks = true
lto = false
panic = 'unwind'
incremental = false
codegen-units = 256

[profile.release]
debug = true

[lib]
path = "src/lib.rs"

[[example]]
name = "test"
path = "examples/example.rs"

[[example]]
name = "automate_policy"
path = "examples/policy/automate_policy.rs"

[[example]]
name = "real_dataset"
path = "examples/real_dataset/real_dataset.rs"

[[example]]
name = "sql_query"
path = "examples/sql_query/sql_query.rs"

[[example]]
name = "turtle"
path = "examples/turtle/turtle_example.rs"

[[example]]
name = "gen_data"
path = "examples/synthetic_data/gen_data.rs"

[[example]]
name = "sparql_syntax"
path = "examples/sparql_syntax/sparql_syntax.rs"

[[example]]
name = "http_check"
path = "examples/http_test/http_check.rs"

[[example]]
name = "advanced_join"
path = "examples/sparql_syntax/advanced_join/advanced_join.rs"

[[example]]
name = "advanced_sparql"
path = "examples/sparql_syntax/advanced_sparql/advanced.rs"

[[example]]
name = "aggregate_sum"
path = "examples/sparql_syntax/aggregate_function/sum.rs"

[[example]]
name = "aggregate_min"
path = "examples/sparql_syntax/aggregate_function/min.rs"

[[example]]
name = "aggregate_avg"
path = "examples/sparql_syntax/aggregate_function/avg.rs"

[[example]]
name = "filter_int"
path = "examples/sparql_syntax/filter/filter_int.rs"

[[example]]
name = "simple_filter"
path = "examples/sparql_syntax/filter/simple_filter.rs"

[[example]]
name = "filter_char"
path = "examples/sparql_syntax/filter/filter_char.rs"

[[example]]
name = "knowledge_graph"
path = "examples/sparql_syntax/knowledge_graph/knowledge_graph.rs"

[[example]]
name = "n3_data_simple"
path = "examples/sparql_syntax/n3_data/n3_data.rs"

[[example]]
name = "n3_data_advanced"
path = "examples/sparql_syntax/n3_data/n3_data_advanced.rs"

[[example]]
name = "select_all"
path = "examples/sparql_syntax/select_all/select_all.rs"

[[example]]
name = "simple_join"
path = "examples/sparql_syntax/simple_join/simple_join.rs"

[[example]]
name = "simple_select_synth_data"
path = "examples/sparql_syntax/simple_select/simple_select_synth_data.rs"

[[example]]
name = "simple_select"
path = "examples/sparql_syntax/simple_select/simple_select.rs"

[[example]]
name = "values"
path = "examples/sparql_syntax/values_keyword/values.rs"

[[example]]
name = "insert"
path = "examples/sparql_syntax/insert/insert.rs"

[[example]]
name = "multi_thread"
path = "examples/sparql_syntax/from_file/multi_thread.rs"

[[example]]
name = "one_thread"
path = "examples/sparql_syntax/from_file/one_thread.rs"